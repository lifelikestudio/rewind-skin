<main class="product-page__hero wrapper wrapper--md">
  <section class="product-page__container">
    {% assign downcased_vendor = product.vendor | strip | downcase %}
    {% comment %} revisit the br logic because it should also check if they're logged-in or not and some br has variants {% endcomment %}
    {% comment %}
      {% if downcased_vendor == 'biologique recherche' and customer == null or product.variants.size <= 1 %}
      <div class="product-page__copy-lockup product-page__copy-lockup--br">
      <h1 class="product-page__title is--desktop">{{ product.title }}</h1>
      <div class="product-page__rating is--desktop">
      {% render 'okendo-reviews-product-rating-summary', product: product %}
      </div>
      {{ product.description }}
      </div>
      {% else %} {% endif %}
    {% endcomment %}
    <div class="product-page__copy-lockup">
      <h1 class="product-page__title is--desktop">{{ product.title }}</h1>
      <div class="product-page__rating is--desktop">
        {% render 'okendo-reviews-product-rating-summary'
          , product: product %}
      </div>
      {{ product.description }}
    </div>
  </section>
  <section class="product-page__container">
    {% comment %}
      <div class="keen-slider">
      {% assign current_variant_id = product.selected_or_first_available_variant.id %}

      {% for variant in product.variants %}
      {% assign variant_value = variant.options.first | downcase | replace: ' ', '-' %}
      {% assign images_found = false %}

      {% for image in product.images %}
      {% if image.src contains variant_value and image.src contains 'product-page' %}
      {% assign images_found = true %}
      <div
      class="keen-slider__slide product-page__product-img-container"
      data-variant-id="{{ variant.id }}"
      style="{% if variant.id != current_variant_id %}display: none;{% endif %}">
      <img
      src="{{ image.src | img_url: '893x' }}"
      alt="{{ image.alt | escape }}"
      width="893"
      height="auto"
      loading="eager"
      class="product-page__product-img"
      data-variant-id="{{ variant.id }}">
      </div>
      {% endif %}
      {% endfor %}

      {% if images_found == false %}
      <!-- Fallback to the product's featured image or a default image -->
      <div
      class="keen-slider__slide product-page__product-img-container"
      data-variant-id="{{ variant.id }}"
      style="{% if variant.id != current_variant_id %}display: none;{% endif %}">
      <img
      src="{{ product.featured_image.src | img_url: '893x' }}"
      alt="{{ product.featured_image.alt | escape }}"
      width="893"
      height="auto"
      loading="eager"
      class="product-page__product-img"
      data-variant-id="{{ variant.id }}">
      </div>
      {% endif %}
      {% endfor %}
      </div>
    {% endcomment %}
    <div class="keen-slider" id="keen-slider"></div>
  </section>
  <section class="product-page__container">
    <form
      action="/cart/add"
      method="post"
      enctype="multipart/form-data"
      class="product-page__checkout-form">
      <h1 class="product-page__title is--mobile">{{ product.title }}</h1>
      <div class="product-page__rating is--mobile">
        {% render 'okendo-reviews-product-rating-summary'
          , product: product %}
      </div>
      <!-- Check if the product has multiple variants -->
      {% if product.variants.size > 1 %}
        <!-- If yes, display a dropdown menu for variant selection -->
        <div class="product-page__variants-group">
          {% for variant in product.variants %}
            <div class="product-page__variant">
              <input
                type="radio"
                name="id"
                value="{{ variant.id }}"
                id="variant-{{ variant.id }}"
                {% if forloop.first %}
                checked
                {% endif %}>
              <label class="all-caps" for="variant-{{ variant.id }}">{{ variant.title }}</label>
            </div>
          {% endfor %}
        </div>
      {% else %}
        <!-- If the product does not have multiple variants, use a hidden input to add the product's variant ID -->
        <input
          type="hidden"
          name="id"
          value="{{ product.variants.first.id }}">
      {% endif %}

      <!-- Place Subify widget wrapper outside of the variant loop but after variant selection -->
      <div id="subify-widget-wrapper" class="subify-widget-wrapper"></div>

      {% assign downcased_vendor = product.vendor | strip | downcase %}

      {% if downcased_vendor == 'biologique recherche' and localization.country.iso_code != 'CA' %}
        {% for variant in product.variants %}
          <div class="product-page__sold-out-group variant-section variant-section-{{ variant.id }}">
            <p class="btn btn--secondary all-caps product-page__checkout-btn product-page__checkout-btn--sold-out">
              Exclusive to Canada
            </p>
            <a class="btn btn--secondary all-caps product-page__checkout-btn product-page__checkout-btn--icon" href="/collections/all">Continue Shopping</a>
          </div>
        {% endfor %}
      {% endif %}

      {% for variant in product.variants %}
        {% if variant.available %}
          <div class="product-page__quantity-add-group variant-section variant-section-{{ variant.id }}">
            <!-- Quantity input field -->
            <div class="product-page__quantity">
              <button type="button" class="quantity__decrement">-</button>
              <input
                class="product-page__quantity-input"
                type="number"
                min="1"
                name="quantity-{{ variant.id }}"
                value="1"
                data-variant-id="{{ variant.id }}">
              <button type="button" class="quantity__increment">+</button>
            </div>

            <!-- Remove the Subify wrapper from inside the variant loop -->

            <!-- Add to Cart button -->
            <button
              class="btn btn--secondary all-caps product-page__checkout-btn"
              type="submit"
              name="add-to-cart-{{ variant.id }}">
              {% if variant.compare_at_price > variant.price %}
                <span>Add to Bag</span>
                <span class="checkout-btn__sale-price">
                  <del>{{ variant.compare_at_price | money_with_currency | remove: '.00' }}</del>
                  <ins>{{ variant.price | money_with_currency | remove: '.00' }}</ins>
                </span>
              {% else %}
                <span>Add to Bag</span>
                <span>{{ variant.price | money_with_currency | remove: '.00' }}</span>
              {% endif %}
            </button>
            <p class="product-page__payment-plan">
              or 4 interest-free payments of {% assign divided_price = variant.price | divided_by: 4 %}
              {{ divided_price | money_with_currency }} with
              <span class="is--emphasized">Sezzle</span>
            </p>
          </div>
        {% else %}
          <div class="product-page__sold-out-group variant-section variant-section-{{ variant.id }}">
            <p class="btn btn--secondary all-caps product-page__checkout-btn product-page__checkout-btn--sold-out">
              Out of Stock
            </p>
            <a class="btn btn--secondary all-caps product-page__checkout-btn product-page__checkout-btn--icon" href="/collections/all">Continue Shopping</a>
          </div>
        {% endif %}
      {% endfor %}

      <style>
        /* Style for the Subify widget wrapper */
        .subify-widget-wrapper {
          width: 100%;
          margin: 15px 0;
          display: block;
          /* Ensure it's always displayed */
        }

        /* Add styling to position the widget properly in the layout flow */
        .product-page__checkout-form {
          display: flex;
          flex-direction: column;
        }

        /* Ensure variant sections appear after the widget */
        .variant-section {
          order: 3;
        }

        /* Position the widget after the variant selection */
        .product-page__variants-group {
          order: 1;
        }

        #subify-widget-wrapper {
          order: 2;
        }
      </style>

      <!-- Add this to your product.liquid file in the <head> section or at the top of your form section -->
      <script
        src="https://cdn.hengam.io/subify/subify-sdk.js"
        defer
        id="subify-sdk-script"></script>

      <!-- The rest of your implementation with a few adjustments -->
      <script type="text/javascript">
        (function() {
          let isWidgetInitialized = false;
          
          // Initialize Subify with the current variant
          function initSubify() {
            // Skip if already initialized
            if (isWidgetInitialized) return;
            
            const selectedVariantInput = document.querySelector('input[name="id"]:checked') || 
                                        document.querySelector('input[name="id"]');
            const variantId = selectedVariantInput ? selectedVariantInput.value : null;
            
            console.log("Initializing Subify with variant ID:", variantId);
            
            if (window.subifySdk && variantId) {
              // Clear any existing widget first
              const widgetWrapper = document.getElementById('subify-widget-wrapper');
              if (widgetWrapper) {
                widgetWrapper.innerHTML = '';
              }
              
              window.subifySdk.renderWidget(
                {{ product | json }}, 
                {
                  renderPosition: {
                    wrapper: "#subify-widget-wrapper",
                    position: "APPEND"
                  },
                  sellingPlanInput: {
                    wrapper: "form.product-page__checkout-form", // Add the input to the form
                    id: "selling-plan-input"
                  }
                }
              );
              
              isWidgetInitialized = true;
            } else {
              console.warn("Could not initialize Subify. SDK loaded:", !!window.subifySdk, "Variant ID:", variantId);
            }
          }
          
          // Update the selected variant when it changes
          function updateVariant() {
            const selectedVariantInput = document.querySelector('input[name="id"]:checked') || 
                                        document.querySelector('input[name="id"]');
            const variantId = selectedVariantInput ? selectedVariantInput.value : null;
            
            if (window.subifySdk && variantId && typeof window.subifySdk.changeVariant === 'function') {
              console.log("Updating Subify variant to:", variantId);
              
              // Use the product ID with the variant ID
              const productId = {{ product.id }};
              window.subifySdk.changeVariant(productId, variantId);
              
              // Make sure the widget wrapper is visible
              const widgetWrapper = document.getElementById('subify-widget-wrapper');
              if (widgetWrapper) {
                widgetWrapper.style.display = 'block';
              }
            }
          }
          
          // Function to update the Add to Bag button text based on subscription selection
          function updateAddToBagButton(isSubscription, sellingPlan) {
            const selectedVariantInput = document.querySelector('input[name="id"]:checked') || 
                                        document.querySelector('input[name="id"]');
            if (!selectedVariantInput) return;
            
            const variantId = selectedVariantInput.value;
            const addToCartBtn = document.querySelector(`button[name="add-to-cart-${variantId}"]`);
            if (!addToCartBtn) return;
            
            const textSpan = addToCartBtn.querySelector('span:first-child');
            
            if (isSubscription && sellingPlan) {
              // Update to subscription text
              if (textSpan) {
                textSpan.textContent = 'Subscribe & Save';
              }
            } else {
              // Reset to default text
              if (textSpan) {
                textSpan.textContent = 'Add to Bag';
              }
            }
          }
          
          // Initialize when the page loads
          document.addEventListener('DOMContentLoaded', function() {
            // Check URL for variant ID and select that radio button
            const urlParams = new URLSearchParams(window.location.search);
            const variantFromUrl = urlParams.get('variant');
            
            if (variantFromUrl) {
              const variantInput = document.querySelector(`input[name="id"][value="${variantFromUrl}"]`);
              if (variantInput) {
                variantInput.checked = true;
              }
            }
            
            // Initialize Subify - with a short delay to ensure DOM is ready
            setTimeout(function() {
              if (window.subifySdk) {
                initSubify();
              } else {
                window.addEventListener("subify:sdkLoaded", initSubify);
              }
            }, 100);
            
            // Add event listeners to variant radio buttons
            document.querySelectorAll('input[name="id"]').forEach(input => {
              input.addEventListener('change', updateVariant);
            });
            
            // Listen for selling plan changes
            window.addEventListener("subify:sellingPlanChange", function(event) {
              console.log('Subscription plan changed:', event.detail);
              
              // event.detail contains targetProductId and selectedSellingPlan
              const { targetProductId, selectedSellingPlan } = event.detail;
              
              // Update the hidden input for the selling plan
              const sellingPlanInput = document.getElementById('selling-plan-input');
              
              if (selectedSellingPlan) {
                // If a selling plan is selected, set the value
                if (sellingPlanInput) {
                  sellingPlanInput.value = selectedSellingPlan.id || '';
                } else {
                  // If the input doesn't exist yet, create it
                  const input = document.createElement('input');
                  input.type = 'hidden';
                  input.id = 'selling-plan-input';
                  input.name = 'selling_plan';
                  input.value = selectedSellingPlan.id || '';
                  document.querySelector('form.product-page__checkout-form').appendChild(input);
                }
                
                // Update the Add to Bag button text
                updateAddToBagButton(true, selectedSellingPlan);
              } else {
                // If one-time purchase is selected, remove the selling plan
                if (sellingPlanInput) {
                  sellingPlanInput.value = '';
                }
                
                // Reset the Add to Bag button text
                updateAddToBagButton(false, null);
              }
            });
            
            // Also handle variant changes to ensure selling plan is still reflected
            window.addEventListener("subify:variantChange", function(event) {
              console.log('Variant changed:', event.detail);
              // You might need to check if the selling plan is still valid for the new variant
              // This depends on your specific setup
            });
          });
        })();
      </script>
    </form>
  </section>
</main>
{% if product.metafields.custom.directions != blank or product.metafields.custom.ingredients != blank %}
  <section class="product-page__more-info wrapper wrapper--md">
    {% if product.metafields.custom.directions != blank %}
      <div class="product-page__container">
        <h2 class="product-page__heading">Directions</h2>
        <p class="product-page__body">{{ product.metafields.custom.directions }}</p>
      </div>
    {% endif %}
    {% if product.metafields.custom.ingredients != blank %}
      <div class="product-page__container">
        <h2 class="product-page__heading">INCI Ingredients</h2>
        <p class="product-page__body">{{ product.metafields.custom.ingredients }}</p>
      </div>
    {% endif %}
  </section>
{% endif %}
<section class="product-page__reviews wrapper wrapper--md">
  <h2 class="product-page__heading">Reviews</h2>
  {% render 'okendo-reviews-widget'
    , product: product %}
</section>
{% section 'skin-analysis' %}
{% comment %}
  <section class="product-page__related">
  <div class="filter-header wrapper wrapper--md">
  <h2 class="all-caps filter-header__type">Related</h2>
  <div class="filter-header__container">
  <button class="all-caps filter-header__type filter-header__btn">Products</button>
  <button class="all-caps filter-header__type filter-header__btn">Treatments</button>
  </div>
  <a class="all-caps filter-header__type" href="/collections/all">Shop All</a>
  </div>
  <div class="product-page__placeholder wrapper wrapper--md">
  <div class="product-page__placeholder-inner"></div>
  </div>
  </section>
{% endcomment %}